{"ast":null,"code":"import _toConsumableArray from\"/Users/alexanderjarabik/Desktop/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import numeral from'numeral';import{Circle,Popup}from\"react-leaflet\";var casesTypeColors={cases:{hex:\"#CC1034\",rgb:\"rgb(204, 16, 52)\",half_op:\"rgba(204, 16, 52, 0.5)\",multiplier:800},recovered:{hex:\"#7dd71d\",rgb:\"rgb(125, 215, 29)\",half_op:\"rgba(125, 215, 29, 0.5)\",multiplier:1200},deaths:{hex:\"#fb4443\",rgb:\"rgb(251, 68, 67)\",half_op:\"rgba(251, 68, 67, 0.5)\",multiplier:2000}};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);return sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};// Draw circles on the map with iteractive tooltop\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country,index){return/*#__PURE__*/React.createElement(Circle,{key:index,center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Death: \",numeral(country.deaths).format(\"0,0\")))));});};","map":{"version":3,"sources":["/Users/alexanderjarabik/Desktop/covid19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","prettyPrintStat","stat","format","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","index","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACHC,GAAG,CAAE,SADF,CAEHC,GAAG,CAAE,kBAFF,CAGHC,OAAO,CAAE,wBAHN,CAIHC,UAAU,CAAE,GAJT,CADa,CAOpBC,SAAS,CAAE,CACPJ,GAAG,CAAE,SADE,CAEPC,GAAG,CAAE,mBAFE,CAGPC,OAAO,CAAE,yBAHF,CAIPC,UAAU,CAAE,IAJL,CAPS,CAapBE,MAAM,CAAE,CACJL,GAAG,CAAE,SADD,CAEJC,GAAG,CAAE,kBAFD,CAGJC,OAAO,CAAE,wBAHL,CAIJC,UAAU,CAAE,IAJR,CAbY,CAAxB,CAqBA,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CACrC,MAAOA,CAAAA,IAAI,YAAOZ,OAAO,CAACY,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IAAnD,CACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CAEA,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACd,KAAF,CAAUe,CAAC,CAACf,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAApC,EAAhB,CAAP,CAEH,CALM,CAMP;AACA,MAAO,IAAMgB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,IAAD,KAAOM,CAAAA,SAAP,2DAAmB,OAAnB,OACzBN,CAAAA,IAAI,CAACO,GAAL,CAAS,SAACC,OAAD,CAAUC,KAAV,qBACL,oBAAC,MAAD,EACI,GAAG,CAAEA,KADT,CAEI,MAAM,CAAE,CAACD,OAAO,CAACE,WAAR,CAAoBC,GAArB,CAA0BH,OAAO,CAACE,WAAR,CAAoBE,IAA9C,CAFZ,CAGI,WAAW,CAAE,GAHjB,CAII,SAAS,CAAExB,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAJ1C,CAKI,MAAM,CACFuB,IAAI,CAACC,IAAL,CAAUN,OAAO,CAACF,SAAD,CAAjB,EAAgClB,eAAe,CAACkB,SAAD,CAAf,CAA2Bb,UANnE,eASI,oBAAC,KAAD,EAAO,SAAS,CAAC,gBAAjB,eACI,4CACI,2BAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAE,CAAEsB,eAAe,eAASP,OAAO,CAACE,WAAR,CAAoBM,IAA7B,KAAjB,CAAlC,EADJ,cAII,2BAAK,SAAS,CAAC,WAAf,EAA4BR,OAAO,CAACA,OAApC,CAJJ,cAKI,2BAAK,SAAS,CAAC,gBAAf,YAAwCvB,OAAO,CAACuB,OAAO,CAACnB,KAAT,CAAP,CAAuBS,MAAvB,CAA8B,KAA9B,CAAxC,CALJ,cAMI,2BAAK,SAAS,CAAC,gBAAf,gBAA4Cb,OAAO,CAACuB,OAAO,CAACd,SAAT,CAAP,CAA2BI,MAA3B,CAAkC,KAAlC,CAA5C,CANJ,cAOI,2BAAK,SAAS,CAAC,aAAf,YAAqCb,OAAO,CAACuB,OAAO,CAACb,MAAT,CAAP,CAAwBG,MAAxB,CAA+B,KAA/B,CAArC,CAPJ,CADJ,CATJ,CADK,EAAT,CADyB,EAAtB","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#CC1034\",\n        rgb: \"rgb(204, 16, 52)\",\n        half_op: \"rgba(204, 16, 52, 0.5)\",\n        multiplier: 800,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        rgb: \"rgb(125, 215, 29)\",\n        half_op: \"rgba(125, 215, 29, 0.5)\",\n        multiplier: 1200,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        rgb: \"rgb(251, 68, 67)\",\n        half_op: \"rgba(251, 68, 67, 0.5)\",\n        multiplier: 2000,\n    },\n};\n\nexport const prettyPrintStat = (stat) => {\n    return stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n}\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\n\n};\n// Draw circles on the map with iteractive tooltop\nexport const showDataOnMap = (data, casesType = 'cases') => (\n    data.map((country, index) => (\n        <Circle\n            key={index}\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            fillColor={casesTypeColors[casesType].hex}\n            radius={\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup className=\"info-container\">\n                <div>\n                    <div className=\"info-flag\" style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\n\n\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n                    <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n                    <div className=\"info-deaths\">Death: {numeral(country.deaths).format(\"0,0\")}</div>\n                </div>\n            </Popup>\n        </Circle>\n    ))\n);"]},"metadata":{},"sourceType":"module"}