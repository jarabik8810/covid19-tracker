{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderjarabik/Desktop/covid19/src/LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n  const bulidChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  }; // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(respons => respons.json()).then(data => {\n      console.log(data);\n      const chardData = bulidChartData(data);\n      setData(chardData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: {\n      dataset: [{\n        backgroundColor: \"rgba(204,16,52,0.2)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/alexanderjarabik/Desktop/covid19/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","bulidChartData","casesType","chartData","lastDataPoint","date","cases","newDataPint","x","y","push","fetch","then","respons","json","console","log","chardData","dataset","backgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAGA,SAASC,SAAT,GAAqB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAG,OAAnB,KAA+B;AAClD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA6B;AACzB,UAAIF,aAAJ,EAAmB;AACf,cAAMG,WAAW,GAAG;AAChBC,UAAAA,CAAC,EAAEH,IADa;AAEhBI,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFX,SAApB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,WAAf;AACH;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAfD,CAJiB,CAoBjB;;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACUC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADrB,EAEKF,IAFL,CAEUb,IAAI,IAAI;AACVgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMkB,SAAS,GAAGhB,cAAc,CAACF,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACiB,SAAD,CAAP;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,eAAe,EAAE,qBADrB;AAEIC,QAAAA,WAAW,EAAE,SAFjB;AAGIrB,QAAAA,IAAI,EAAEA;AAHV,OADK;AADD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH;;AAED,eAAeD,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\nfunction LineGraph() {\n\n    const [data, setData] = useState({})\n\n    const bulidChartData = (data, casesType = 'cases') => {\n        const chartData = [];\n        let lastDataPoint;\n\n        for (let date in data.cases) {\n            if (lastDataPoint) {\n                const newDataPint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPint);\n            }\n            lastDataPoint = data[casesType][date];\n        }\n        return chartData;\n    };\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n    useEffect(() => {\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n            .then(respons => respons.json())\n            .then(data => {\n                console.log(data);\n                const chardData = bulidChartData(data);\n                setData(chardData);\n            });\n    }, [])\n\n\n\n    return (\n        <div>\n            <Line data={{\n                dataset: [\n                    {\n                        backgroundColor: \"rgba(204,16,52,0.2)\",\n                        borderColor: \"#CC1034\",\n                        data: data\n                    }\n                ]\n            }} />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}