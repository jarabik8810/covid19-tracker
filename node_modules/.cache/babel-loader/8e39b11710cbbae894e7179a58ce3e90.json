{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexanderjarabik/Desktop/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alexanderjarabik/Desktop/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alexanderjarabik/Desktop/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import InfoBox from'./InfoBox';import Map from'./Map';import Table from'./Table';import LineGraph from'./LineGraph';import{sortData,prettyPrintStat}from'./util';import\"leaflet/dist/leaflet.css\";function App(){/* https://disease.sh/v3/covid-19/countries */var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState('worldwide'),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState(\"cases\"),_useState10=_slicedToArray(_useState9,2),casesType=_useState10[0],setCasesType=_useState10[1];var _useState11=useState({lat:34.80746,lng:-40.4796}),_useState12=_slicedToArray(_useState11,2),mapCenter=_useState12[0],setMapCenter=_useState12[1];var _useState13=useState(3),_useState14=_slicedToArray(_useState13,2),mapZoom=_useState14[0],setMapZoom=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),mapCountries=_useState16[0],setMapCountries=_useState16[1];useEffect(function(){fetch('https://disease.sh/v3/covid-19/all').then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=e.target.value;/* https://disease.sh/v3/covid-19/all*/ /* https://disease.sh/v3/covid-19/countries/[COUNTRY__CODE] */url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=4;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);if(countryCode==='worldwide'){setMapCenter({lat:34.80746,lng:-40.4796});setMapZoom(4);}else{setMapCenter({lat:data.countryInfo.lat,lng:data.countryInfo.long});setMapZoom(4);}});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app__dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",value:country,onChange:onCountryChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country,id){return/*#__PURE__*/React.createElement(MenuItem,{key:id,value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app__stats\"},/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:prettyPrintStat(countryInfo.cases)}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType('recovered');},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:prettyPrintStat(countryInfo.recovered)}),/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:prettyPrintStat(countryInfo.deaths)})),/*#__PURE__*/React.createElement(Map,{casesType:casesType,countries:mapCountries,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(Card,{className:\"app__right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Live Cases by Country\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",null,\"Wordwide new \",casesType),/*#__PURE__*/React.createElement(LineGraph,{casesType:casesType}))));}export default App;","map":{"version":3,"sources":["/Users/alexanderjarabik/Desktop/covid19/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","LineGraph","sortData","prettyPrintStat","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","e","countryCode","target","url","long","id","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table'\nimport LineGraph from './LineGraph';\nimport { sortData, prettyPrintStat } from './util';\nimport \"leaflet/dist/leaflet.css\";\n\n\nfunction App() {\n  /* https://disease.sh/v3/covid-19/countries */\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country,\n              value: country.countryInfo.iso2\n            }\n          ));\n\n          const sortedData = sortData(data)\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        })\n\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    /* https://disease.sh/v3/covid-19/all*/\n    /* https://disease.sh/v3/covid-19/countries/[COUNTRY__CODE] */\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        if (countryCode === 'worldwide') {\n          setMapCenter({ lat: 34.80746, lng: -40.4796 });\n          setMapZoom(4)\n        } else {\n          setMapCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\n          setMapZoom(4)\n        }\n      })\n\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country, id) => (\n                <MenuItem key={id} value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={e => setCasesType('cases')}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)} />\n\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType('recovered')}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)} />\n\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={e => setCasesType('deaths')}\n            title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)} />\n        </div>\n        {/* Map*/}\n        <Map casesType={casesType} countries={mapCountries} center={mapCenter} zoom={mapZoom} />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Wordwide new {casesType}</h3>\n          <LineGraph casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div >\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}