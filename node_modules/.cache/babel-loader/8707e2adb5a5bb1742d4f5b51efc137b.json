{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderjarabik/Desktop/covid19/src/LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"incex\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      tricks: {\n        callBack: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n  const bulidChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  }; // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(respons => respons.json()).then(data => {\n      console.log(data);\n      const chardData = bulidChartData(data);\n      setData(chardData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      dataset: [{\n        backgroundColor: \"rgba(204,16,52,0.2)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/alexanderjarabik/Desktop/covid19/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","tricks","callBack","index","values","LineGraph","setData","bulidChartData","casesType","chartData","lastDataPoint","date","cases","newDataPint","x","y","push","fetch","then","respons","json","console","log","chardData","dataset","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\n\nconst options = {\n    legend: {\n        display: false\n    },\n    elements: {\n        point: {\n            radius: 0\n        }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"incex\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            }\n        }\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\"\n                }\n            }\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                tricks: {\n                    callBack: function (value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    }\n                }\n            }\n        ]\n\n    }\n}\n\nfunction LineGraph() {\n\n    const [data, setData] = useState({})\n\n    const bulidChartData = (data, casesType = 'cases') => {\n        const chartData = [];\n        let lastDataPoint;\n\n        for (let date in data.cases) {\n            if (lastDataPoint) {\n                const newDataPint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPint);\n            }\n            lastDataPoint = data[casesType][date];\n        }\n        return chartData;\n    };\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n    useEffect(() => {\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n            .then(respons => respons.json())\n            .then(data => {\n                console.log(data);\n                const chardData = bulidChartData(data);\n                setData(chardData);\n            });\n    }, [])\n\n\n\n    return (\n        <div>\n            <Line\n                options={options}\n                data={{\n                    dataset: [\n                        {\n                            backgroundColor: \"rgba(204,16,52,0.2)\",\n                            borderColor: \"#CC1034\",\n                            data: data\n                        }\n                    ]\n                }} />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}